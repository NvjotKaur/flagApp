{"ast":null,"code":"import _classCallCheck from \"/Users/navjotkaur/Desktop/reactNew/ReactFlagApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/navjotkaur/Desktop/reactNew/ReactFlagApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/navjotkaur/Desktop/reactNew/ReactFlagApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/navjotkaur/Desktop/reactNew/ReactFlagApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/navjotkaur/Desktop/reactNew/ReactFlagApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/navjotkaur/Desktop/reactNew/ReactFlagApp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/navjotkaur/Desktop/reactNew/ReactFlagApp/src/components/countryFlagPicker/countryFlagPickerComponent.js\";\nimport React, { Component } from 'react';\nimport SearchBox from '../SearchBoxComponent/SearchBoxComponent';\nimport './countryFlagPickerComponent.css';\n\nvar continents = require('../../data/continents.json');\n\nvar CountryFlagPicker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CountryFlagPicker, _Component);\n\n  function CountryFlagPicker(props) {\n    var _this;\n\n    _classCallCheck(this, CountryFlagPicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CountryFlagPicker).call(this, props));\n    _this.state = {\n      continents: continents,\n      continentList: [],\n      countriesList: [],\n      selectedContinent: null,\n      selectedCountriesList: []\n    };\n    _this.selectedContinent = _this.selectedContinent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.selectedCountry = _this.selectedCountry.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearFlags = _this.clearFlags.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CountryFlagPicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.prepareContentList();\n    }\n  }, {\n    key: \"prepareContentList\",\n    value: function prepareContentList() {\n      var continents = this.state.continents;\n      var items = continents.map(function (item) {\n        return {\n          label: item.continent,\n          value: item.continent\n        };\n      });\n      this.setState({\n        continentList: items\n      });\n    }\n  }, {\n    key: \"selectedContinent\",\n    value: function selectedContinent(_selectedContinent, shouldClear) {\n      this.setState({\n        selectedCountriesList: []\n      });\n\n      if (shouldClear) {\n        this.setState({\n          countriesList: [],\n          selectedContinent: null,\n          selectedCountriesList: []\n        });\n        return;\n      }\n\n      var continents = this.state.continents;\n      var currentContriesfind = continents.find(function (item) {\n        return item.continent === _selectedContinent.value;\n      }).countries;\n      var currentContries = currentContriesfind.map(function (item) {\n        return {\n          label: item.name,\n          value: item.flag\n        };\n      });\n\n      if (this.state.selectedCountriesList.length > 0) {\n        this.refs.countrySelector.clearSelectedOptions();\n        this.setState({\n          selectedCountriesList: []\n        });\n      }\n\n      this.setState({\n        countriesList: currentContries,\n        selectedContinent: _selectedContinent,\n        selectedCountriesList: []\n      });\n    }\n  }, {\n    key: \"selectedCountry\",\n    value: function selectedCountry(value, shouldClear) {\n      if (shouldClear) {\n        this.setState({\n          selectedCountriesList: []\n        });\n        return;\n      }\n\n      this.setState({\n        selectedCountriesList: value\n      });\n    }\n  }, {\n    key: \"clearFlags\",\n    value: function clearFlags() {\n      this.refs.countrySelector.clearSelectedOptions();\n      this.setState({\n        selectedCountriesList: []\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          continentList = _this$state.continentList,\n          countriesList = _this$state.countriesList,\n          selectedContinent = _this$state.selectedContinent,\n          selectedCountriesList = _this$state.selectedCountriesList;\n      return React.createElement(\"div\", {\n        className: \"flag-app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"home-flag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Country Flag Picker\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"This app will help you to learn flags around the world in 3 steps\")), React.createElement(\"div\", {\n        className: \"flag-picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"continent-picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, continentList.length ? React.createElement(\"div\", {\n        className: \"continent-picker-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Step 1\"), React.createElement(SearchBox, {\n        label: \"select a Continent\",\n        options: continentList,\n        multiSelect: false,\n        onOptionSelection: this.selectedContinent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })) : '', selectedContinent ? React.createElement(\"div\", {\n        className: \"selected-country\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"You Selected\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, selectedContinent.label)) : ''), React.createElement(\"div\", {\n        className: \"continent-picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, countriesList.length ? React.createElement(\"div\", {\n        className: \"country-selection-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Step 2\"), React.createElement(SearchBox, {\n        ref: \"countrySelector\",\n        label: \"now, select the Country\",\n        options: countriesList,\n        multiSelect: true,\n        onOptionSelection: this.selectedCountry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })) : ''), React.createElement(\"div\", {\n        className: \"continent-picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, selectedCountriesList.length ? React.createElement(\"div\", {\n        className: \"home-content-flag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Selected Flags:\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, selectedCountriesList.map(function (country, index) {\n        return React.createElement(\"span\", {\n          key: index,\n          className: \"flag\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, country.value);\n      })), React.createElement(\"button\", {\n        onClick: this.clearFlags,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Clear Flags\")) : '')));\n    }\n  }]);\n\n  return CountryFlagPicker;\n}(Component);\n\nexport default CountryFlagPicker;","map":{"version":3,"sources":["/Users/navjotkaur/Desktop/reactNew/ReactFlagApp/src/components/countryFlagPicker/countryFlagPickerComponent.js"],"names":["React","Component","SearchBox","continents","require","CountryFlagPicker","props","state","continentList","countriesList","selectedContinent","selectedCountriesList","bind","selectedCountry","clearFlags","prepareContentList","items","map","item","label","continent","value","setState","shouldClear","currentContriesfind","find","countries","currentContries","name","flag","length","refs","countrySelector","clearSelectedOptions","country","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport SearchBox from '../SearchBoxComponent/SearchBoxComponent';\r\nimport './countryFlagPickerComponent.css';\r\n\r\nvar continents = require('../../data/continents.json');\r\n\r\nclass CountryFlagPicker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            continents: continents,\r\n            continentList: [],\r\n            countriesList: [],\r\n            selectedContinent: null,\r\n            selectedCountriesList: [],\r\n        }\r\n        this.selectedContinent = this.selectedContinent.bind(this);\r\n        this.selectedCountry = this.selectedCountry.bind(this);\r\n        this.clearFlags= this.clearFlags.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.prepareContentList();\r\n    }\r\n\r\n    prepareContentList() {\r\n        const { continents } = this.state;\r\n        const items = continents.map((item) => {\r\n            return {\r\n                label: item.continent,\r\n                value: item.continent\r\n            }\r\n        });\r\n        this.setState({ continentList: items })\r\n    }\r\n\r\n    selectedContinent(selectedContinent, shouldClear) {\r\n        this.setState({ selectedCountriesList: [] });\r\n        if(shouldClear){\r\n            this.setState({\r\n                countriesList: [],\r\n                selectedContinent: null,\r\n                selectedCountriesList:[]\r\n            });\r\n            return;\r\n        }\r\n        const { continents } = this.state;\r\n        const currentContriesfind = continents.find(item => item.continent === selectedContinent.value).countries;\r\n        const currentContries = currentContriesfind.map((item) => {\r\n            return {\r\n                label: item.name,\r\n                value: item.flag\r\n            }\r\n        })\r\n        if(this.state.selectedCountriesList.length > 0) {\r\n            this.refs.countrySelector.clearSelectedOptions();\r\n            this.setState({ selectedCountriesList: [] });\r\n        }\r\n        this.setState({\r\n            countriesList: currentContries,\r\n            selectedContinent: selectedContinent,\r\n            selectedCountriesList:[]\r\n        });\r\n    }\r\n\r\n    selectedCountry(value, shouldClear) {\r\n        if(shouldClear){\r\n            this.setState({ selectedCountriesList: [] });\r\n            return;\r\n        }\r\n        this.setState({ selectedCountriesList: value });\r\n    }\r\n\r\n    clearFlags(){\r\n        this.refs.countrySelector.clearSelectedOptions();\r\n        this.setState({ selectedCountriesList: [] });\r\n    }\r\n\r\n    render() {\r\n        const { continentList, countriesList, selectedContinent, selectedCountriesList } = this.state;\r\n        return (\r\n            <div className=\"flag-app\">\r\n                <div className=\"home-flag\">\r\n                    <h1>Country Flag Picker</h1>\r\n                    <p>This app will help you to learn flags around the world in 3 steps</p>\r\n                </div>\r\n                <div className=\"flag-picker\">\r\n                    <div className=\"continent-picker\">\r\n                        {continentList.length ? <div className=\"continent-picker-container\">\r\n                            <h3>Step 1</h3>\r\n                            <SearchBox label=\"select a Continent\" options={continentList} multiSelect={false} onOptionSelection={this.selectedContinent} />\r\n                        </div> : ''}\r\n                        {selectedContinent ?\r\n                            <div className=\"selected-country\"><p>You Selected</p><h3>{selectedContinent.label}</h3></div> : ''}\r\n                    </div>\r\n                    <div className=\"continent-picker\">\r\n                        {countriesList.length ? <div className=\"country-selection-container\">\r\n                            <h3>Step 2</h3>\r\n                            <SearchBox ref=\"countrySelector\" label=\"now, select the Country\" options={countriesList} multiSelect={true} onOptionSelection={this.selectedCountry} />\r\n                        </div> : ''}\r\n                    </div>\r\n                    <div className=\"continent-picker\">\r\n                        {selectedCountriesList.length ? <div className=\"home-content-flag\">\r\n                            <h3>Selected Flags:</h3>\r\n                            <div>\r\n                                {selectedCountriesList.map((country, index) => {\r\n                                    return (<span key={index} className=\"flag\">{country.value}</span>)\r\n                                })}\r\n                            </div>\r\n                            <button onClick={this.clearFlags}>Clear Flags</button>\r\n                        </div> : ''}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountryFlagPicker;\r\n"]},"metadata":{},"sourceType":"module"}